.callout
  = render 'categories/form', category: @category, remote: true
  = form_with model: recipe, local: true do |f|
    = render 'notifications/error_messages', object: f.object
    .grid-x
      .cell
        %label
          It's important to
          %b check all categories that apply
          or
          %b create your own category
          to make it easy for others to find.
        %ul#check_boxes.menu.simple
          - Category.all.each do |category|
            = render 'categories/check_box', recipe: recipe, category: category
        -# %ul.menu.simple
        -#   = f.collection_check_boxes :category_ids, Category.all, :id, :name do |category|
        -#     %li= category.label(data: { value: category.value }) { category.check_box + category.text }
    .grid-x
      .medium-6.cell
        = f.label :name
        = f.text_field :name, placeholder: 'Apple Pie'
        %br/
        = f.label :description
        = f.text_area :description, placeholder: 'The best apple pie you will ever eat.', rows: '2'
        %br/
        = f.label :source, "(Give credit where credit is due) Name the recipe's source"
        = f.text_field :source, placeholder: 'cookbook, website or person'

      .medium-6.cell
        = f.label :images, 'Upload image (landscape for best results)'
        = f.file_field :images, direct_upload: true,
        accept: 'image/png,image/gif,image/jpeg'

        - if f.object.images.attached?
          - f.object.images.each do |image|
            = image_tag medium_image(image)
            .grid-x
              .small-12.cell
                = f.check_box :remove_image, id: 'recipe_remove_image'
                = f.label :remove_image, for: 'recipe_remove_image'

    #parts= render 'parts/fields_for_form', f: f

    .grid-x
      .small-12.cell
        %b Publish
        recipe or save
        as
        %b Draft
        so recipe is
        only visable to you in your cookbook
        .switch.large
          = f.check_box :published, id: 'published', class: 'switch-input'
          = f.label :published, class: 'switch-paddle', for: 'published' do
            %span.switch-active{"aria-hidden" => "true"} Publish
            %span.switch-inactive{"aria-hidden" => "true"} Draft
        = f.submit class: 'button'
